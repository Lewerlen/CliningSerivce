# –§–∞–π–ª: app/services/price_calculator.py

# –¢–∞—Ä–∏—Ñ—ã, –æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞ –≤–∞—à–µ–º –¢–ó
TARIFFS = {
    "üßΩ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∞—è": {"base": 1000, "per_room": 500, "per_bathroom": 300},
    "üßº –ì–µ–Ω–µ—Ä–∞–ª—å–Ω–∞—è": {"base": 1500, "per_room": 700, "per_bathroom": 500},
    "üõ† –ü–æ—Å–ª–µ —Ä–µ–º–æ–Ω—Ç–∞": {"base": 2000, "per_room": 1000, "per_bathroom": 700},
}

# –¶–µ–Ω—ã –Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏
ADDITIONAL_SERVICE_PRICES = {
    "win": 300,
    "sofa": 1500,
    "chair": 300,
    "plumbing": 500,
    "bedding": 200,
    "kitchen": 600,
    "cabinets": 500,
    "balcony": 700,
    "carpet": 800,
    "pets": 400,
    "fridge": 700,
    "stove": 500,
    "oven": 700,
}

def calculate_preliminary_cost(cleaning_type: str, room_count_str: str, bathroom_count_str: str) -> int:
    """–†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –æ–ø—Ü–∏–π."""

    # –ü–æ–ª—É—á–∞–µ–º —Ç–∞—Ä–∏—Ñ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ —É–±–æ—Ä–∫–∏
    tariff = TARIFFS.get(cleaning_type)
    if not tariff:
        return 0  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º 0, –µ—Å–ª–∏ —Ç–∏–ø —É–±–æ—Ä–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ —á–∏—Å–ª–∞, –æ—Ç–±—Ä–∞—Å—ã–≤–∞—è "+"
    try:
        room_count = int(room_count_str.replace('+', ''))
        bathroom_count = int(bathroom_count_str.replace('+', ''))
    except ValueError:
        return 0  # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è

    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ —Ñ–æ—Ä–º—É–ª–µ –∏–∑ –¢–ó
    # –ë–∞–∑–æ–≤–∞—è —Ü–µ–Ω–∞ –≤–∫–ª—é—á–∞–µ—Ç 1 –∫–æ–º–Ω–∞—Ç—É –∏ 1 —Å–∞–Ω—É–∑–µ–ª
    base_price = tariff["base"]

    # –°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã
    extra_rooms_cost = (room_count - 1) * tariff["per_room"] if room_count > 1 else 0

    # –°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∞–Ω—É–∑–ª—ã
    extra_bathrooms_cost = (bathroom_count - 1) * tariff["per_bathroom"] if bathroom_count > 1 else 0

    total_cost = base_price + extra_rooms_cost + extra_bathrooms_cost

    return total_cost


def calculate_total_cost(preliminary_cost: int, selected_services: dict) -> int:
    """
    –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∏—Ç–æ–≥–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å, –¥–æ–±–∞–≤–ª—è—è –∫ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏
    —Ü–µ–Ω—É –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —É—Å–ª—É–≥.
    """
    additional_cost = 0
    if selected_services:
        for service_key, quantity in selected_services.items():
            price = ADDITIONAL_SERVICE_PRICES.get(service_key, 0)
            additional_cost += price * quantity

    return preliminary_cost + additional_cost

def calculate_executor_payment(total_price: float, commission_type: str, commission_value: float) -> float:
    """
    –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å—É–º–º—É –≤—ã–ø–ª–∞—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–æ–º–∏—Å—Å–∏–∏.
    """
    if commission_type == "percent":
        # –ï—Å–ª–∏ –∫–æ–º–∏—Å—Å–∏—è –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö, –≤—ã—á–∏—Ç–∞–µ–º —ç—Ç–æ—Ç –ø—Ä–æ—Ü–µ–Ω—Ç
        payment = total_price * (1 - commission_value / 100)
    elif commission_type == "fixed":
        # –ï—Å–ª–∏ –∫–æ–º–∏—Å—Å–∏—è —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è, –ø—Ä–æ—Å—Ç–æ –≤—ã—á–∏—Ç–∞–µ–º —Å—É–º–º—É
        payment = total_price - commission_value
    else:
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ —Ç–∏–ø –Ω–µ –∑–∞–¥–∞–Ω, –∫–æ–º–∏—Å—Å–∏—è 0
        payment = total_price

    # –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ –¥–≤—É—Ö –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π –∏ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –≤—ã–ø–ª–∞—Ç–∞ –Ω–µ –±—É–¥–µ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–π
    return max(0, round(payment, 2))