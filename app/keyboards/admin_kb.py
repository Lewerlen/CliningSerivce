from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from app.database.models import Ticket, User

def get_admin_main_keyboard() -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."""
    buttons = [
        [KeyboardButton(text="üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞")],
        # –°—é–¥–∞ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –¥—Ä—É–≥–∏–µ –∫–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω–∫–∏
    ]
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)

def get_admin_support_keyboard(counts: dict) -> InlineKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —Å–æ —Å—á–µ—Ç—á–∏–∫–∞–º–∏ –¥–ª—è –≤—Å–µ—Ö —Å—Ç–∞—Ç—É—Å–æ–≤."""
    builder = InlineKeyboardBuilder()
    builder.button(text=f"üì¨ –ù–æ–≤—ã–µ –æ–±—Ä–∞—â–µ–Ω–∏—è ({counts.get('new', 0)})", callback_data="admin_new_tickets")
    builder.button(text=f"üë§ –í —Ä–∞–±–æ—Ç–µ ({counts.get('in_progress', 0)})", callback_data="admin_in_progress_tickets")
    builder.button(text=f"üí¨ –û–∂–∏–¥–∞—é—Ç –æ—Ç–≤–µ—Ç–∞ ({counts.get('answered', 0)})", callback_data="admin_answered_tickets")
    builder.button(text=f"‚úÖ –ó–∞–∫—Ä—ã—Ç—ã–µ ({counts.get('closed', 0)})", callback_data="admin_closed_tickets")
    builder.adjust(1)
    return builder.as_markup()

def get_tickets_list_keyboard(tickets: list[Ticket], list_type: str) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ª—é–±–æ–≥–æ —Å–ø–∏—Å–∫–∞ —Ç–∏–∫–µ—Ç–æ–≤."""
    builder = InlineKeyboardBuilder()
    for ticket in tickets:
        user: User = ticket.user
        theme = ticket.messages[0].text[:20] if ticket.messages else "–ë–µ–∑ —Ç–µ–º—ã"

        # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–ø–∏—Å–∫–∞ –¥–æ–±–∞–≤–ª—è–µ–º –Ω—É–∂–Ω—É—é –∏–∫–æ–Ω–∫—É –¥–ª—è –Ω–∞–≥–ª—è–¥–Ω–æ—Å—Ç–∏
        if list_type == 'new':
            button_text = f"üì¨ ‚Ññ{ticket.id} –æ—Ç {user.name or user.telegram_id} - ¬´{theme}...¬ª"
        elif list_type == 'in_progress':
            button_text = f"üë§ ‚Ññ{ticket.id} –æ—Ç {user.name or user.telegram_id} - ¬´{theme}...¬ª"
        elif list_type == 'answered':
            button_text = f"üí¨ ‚Ññ{ticket.id} –æ—Ç {user.name or user.telegram_id} - ¬´{theme}...¬ª"
        else:  # closed
            button_text = f"‚úÖ ‚Ññ{ticket.id} –æ—Ç {user.name or user.telegram_id} - ¬´{theme}...¬ª"

        builder.button(text=button_text, callback_data=f"admin_view_ticket:{ticket.id}")

    builder.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é –ø–æ–¥–¥–µ—Ä–∂–∫–∏", callback_data="admin_support_menu")
    builder.adjust(1)
    return builder.as_markup()

def get_ticket_work_keyboard(ticket_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –Ω–æ–≤–æ–≥–æ —Ç–∏–∫–µ—Ç–∞ —Å –∫–Ω–æ–ø–∫–æ–π '–í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É'."""
    builder = InlineKeyboardBuilder()
    builder.button(text="‚úÖ –í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É", callback_data=f"admin_take_ticket:{ticket_id}")
    builder.button(text="‚¨ÖÔ∏è –ö —Å–ø–∏—Å–∫—É –Ω–æ–≤—ã—Ö", callback_data="admin_new_tickets")
    builder.adjust(1)
    return builder.as_markup()

def get_in_progress_ticket_keyboard(ticket_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–∏–∫–µ—Ç–∞ –≤ —Ä–∞–±–æ—Ç–µ."""
    builder = InlineKeyboardBuilder()
    builder.button(text="üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—É", callback_data=f"admin_reply_ticket:{ticket_id}")
    builder.button(text="‚úÖ –ó–∞–∫—Ä—ã—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ", callback_data=f"admin_close_ticket:{ticket_id}")
    builder.button(text="‚¨ÖÔ∏è –ö —Å–ø–∏—Å–∫—É '–í —Ä–∞–±–æ—Ç–µ'", callback_data="admin_in_progress_tickets")
    builder.adjust(1)
    return builder.as_markup()

def get_closed_ticket_keyboard() -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–æ–≥–æ —Ç–∏–∫–µ—Ç–∞."""
    builder = InlineKeyboardBuilder()
    # –î–ª—è –∑–∞–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É "–ü–µ—Ä–µ–æ—Ç–∫—Ä—ã—Ç—å", –Ω–æ –ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –Ω–∞–∑–∞–¥
    builder.button(text="‚¨ÖÔ∏è –ö —Å–ø–∏—Å–∫—É –∑–∞–∫—Ä—ã—Ç—ã—Ö", callback_data="admin_closed_tickets")
    return builder.as_markup()


def get_answered_ticket_keyboard(ticket_id: int) -> InlineKeyboardMarkup:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ç–∏–∫–µ—Ç–∞, –æ–∂–∏–¥–∞—é—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∫–ª–∏–µ–Ω—Ç–∞."""
    builder = InlineKeyboardBuilder()
    builder.button(text="üí¨ –û—Ç–≤–µ—Ç–∏—Ç—å –µ—â–µ —Ä–∞–∑", callback_data=f"admin_reply_ticket:{ticket_id}")
    builder.button(text="‚úÖ –ó–∞–∫—Ä—ã—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ", callback_data=f"admin_close_ticket:{ticket_id}")
    builder.button(text="‚¨ÖÔ∏è –ö —Å–ø–∏—Å–∫—É '–û–∂–∏–¥–∞—é—Ç –æ—Ç–≤–µ—Ç–∞'", callback_data="admin_answered_tickets")
    builder.adjust(1)
    return builder.as_markup()
