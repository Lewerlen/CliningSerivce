from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder  # <--- –ù–û–í–´–ô –ò–ú–ü–û–†–¢
import calendar
from datetime import datetime

# --- –ù–û–í–´–ô –ë–õ–û–ö: –í–°–ï –î–õ–Ø –ö–ê–õ–ï–ù–î–ê–†–Ø ---
RUSSIAN_MONTHS = [
    "–Ø–Ω–≤–∞—Ä—å", "–§–µ–≤—Ä–∞–ª—å", "–ú–∞—Ä—Ç", "–ê–ø—Ä–µ–ª—å", "–ú–∞–π", "–ò—é–Ω—å",
    "–ò—é–ª—å", "–ê–≤–≥—É—Å—Ç", "–°–µ–Ω—Ç—è–±—Ä—å", "–û–∫—Ç—è–±—Ä—å", "–ù–æ—è–±—Ä—å", "–î–µ–∫–∞–±—Ä—å"
]


async def create_calendar(year: int, month: int) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    now = datetime.now()
    month_name = RUSSIAN_MONTHS[month - 1]

    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –ø–æ –º–µ—Å—è—Ü–∞–º
    header_buttons = []
    # –ö–Ω–æ–ø–∫–∞ "–Ω–∞–∑–∞–¥", –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü
    if not (year == now.year and month == now.month):
        header_buttons.append(
            InlineKeyboardButton(text="‚¨ÖÔ∏è", callback_data=f"month_nav:prev:{year}:{month}")
        )
    header_buttons.append(
        InlineKeyboardButton(text=f"{month_name} {year}", callback_data="ignore")
    )
    # –ö–Ω–æ–ø–∫–∞ "–≤–ø–µ—Ä–µ–¥"
    header_buttons.append(
        InlineKeyboardButton(text="‚û°Ô∏è", callback_data=f"month_nav:next:{year}:{month}")
    )
    builder.row(*header_buttons)

    # –î–Ω–∏ –Ω–µ–¥–µ–ª–∏
    days = ["–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±", "–í—Å"]
    builder.row(*[InlineKeyboardButton(text=day, callback_data="ignore") for day in days])

    # –î–Ω–∏ –º–µ—Å—è—Ü–∞
    month_calendar = calendar.monthcalendar(year, month)
    for week in month_calendar:
        row_buttons = []
        for day in week:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–µ–Ω—å –ø—Ä–æ—à–µ–¥—à–∏–º
            is_past_day = year == now.year and month == now.month and day < now.day
            if day == 0 or is_past_day:
                row_buttons.append(InlineKeyboardButton(text=" ", callback_data="ignore"))
            else:
                row_buttons.append(
                    InlineKeyboardButton(text=str(day), callback_data=f"day:{year}-{month:02d}-{day:02d}"))
        builder.row(*row_buttons)

    # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥ –∫ –∞–¥—Ä–µ—Å—É"
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∞–¥—Ä–µ—Å—É", callback_data="back_to_address"))

    return builder.as_markup()

def get_main_menu_keyboard() -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é."""
    buttons = [
        [KeyboardButton(text="üì¶ –ó–∞–∫–∞–∑–∞—Ç—å —É–±–æ—Ä–∫—É")],
        [KeyboardButton(text="üí¨ –ú–æ–∏ –∑–∞–∫–∞–∑—ã")],
        [KeyboardButton(text="üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞")],
    ]
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)

def get_cleaning_type_keyboard() -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —É–±–æ—Ä–∫–∏."""
    buttons = [
        [KeyboardButton(text="üßΩ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—â–∞—è")],
        [KeyboardButton(text="üßº –ì–µ–Ω–µ—Ä–∞–ª—å–Ω–∞—è")],
        [KeyboardButton(text="üõ† –ü–æ—Å–ª–µ —Ä–µ–º–æ–Ω—Ç–∞")],
        [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")]
    ]
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)

def get_room_count_keyboard() -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–æ–º–Ω–∞—Ç."""
    buttons = [
        [
            KeyboardButton(text="1"),
            KeyboardButton(text="2"),
            KeyboardButton(text="3"),
            KeyboardButton(text="4"),
            KeyboardButton(text="5+"),
        ],
        [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")]
    ]
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)

def get_bathroom_count_keyboard() -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–∞–Ω—É–∑–ª–æ–≤."""
    buttons = [
        [
            KeyboardButton(text="1"),
            KeyboardButton(text="2"),
            KeyboardButton(text="3+"),
        ],
        [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")]
    ]
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)


# –°–ª–æ–≤–∞—Ä—å —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ —É—Å–ª—É–≥–∞–º–∏ –∏ –∏—Ö —Ü–µ–Ω–∞–º–∏ –∏–∑ –¢–ó
ADDITIONAL_SERVICES = {
    "win": "ü™û –ú–æ–π–∫–∞ –æ–∫–æ–Ω (+300 ‚ÇΩ/—à—Ç)",
    "sofa": "üõã –•–∏–º—á–∏—Å—Ç–∫–∞ –¥–∏–≤–∞–Ω–∞ (+1500 ‚ÇΩ)",
    "chair": "ü™ë –•–∏–º—á–∏—Å—Ç–∫–∞ —Å—Ç—É–ª—å–µ–≤ (+300 ‚ÇΩ/—à—Ç)",
    "plumbing": "üöø –ß–∏—Å—Ç–∫–∞ —Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∏ (+500 ‚ÇΩ)",
    "bedding": "üõè –ó–∞–º–µ–Ω–∞ –ø–æ—Å—Ç–µ–ª—å–Ω–æ–≥–æ –±–µ–ª—å—è (+200 ‚ÇΩ)",
    "kitchen": "üß¥ –ú—ã—Ç—å–µ –∫—É—Ö–æ–Ω–Ω–æ–π —Ç–µ—Ö–Ω–∏–∫–∏ (+600 ‚ÇΩ)",
    "cabinets": "üßº –ß–∏—Å—Ç–∫–∞ —à–∫–∞—Ñ—á–∏–∫–æ–≤ –≤–Ω—É—Ç—Ä–∏ (+500‚ÇΩ)",
    "balcony": "üßØ –£–±–æ—Ä–∫–∞ –±–∞–ª–∫–æ–Ω–∞ (+700 ‚ÇΩ)",
    "carpet": "üßπ –ß–∏—Å—Ç–∫–∞ –∫–æ–≤—Ä–æ–≤ (+800 ‚ÇΩ)",
    "pets": "üêæ –£–¥–∞–ª–µ–Ω–∏–µ —à–µ—Ä—Å—Ç–∏ –∂–∏–≤–æ—Ç–Ω—ã—Ö (+400 ‚ÇΩ)",
    "fridge": "‚ùÑ –ú–æ–π–∫–∞ —Ö–æ–ª–æ–¥–∏–ª—å–Ω–∏–∫–∞ (+700 ‚ÇΩ)",
    "stove": "üç≥ –ú–æ–π–∫–∞ –ø–ª–∏—Ç—ã (+500 ‚ÇΩ)",
    "oven": "üî• –ú–æ–π–∫–∞ –¥—É—Ö–æ–≤–∫–∏ (+700 ‚ÇΩ)",
}


def get_additional_services_keyboard(selected_services: set = None) -> InlineKeyboardMarkup:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–æ–ø. —É—Å–ª—É–≥.
    –û—Ç–º–µ—á–∞–µ—Ç –≥–∞–ª–æ—á–∫–æ–π —É–∂–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏.
    """
    if selected_services is None:
        selected_services = set()

    builder = InlineKeyboardBuilder()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∏–ª–¥–µ—Ä –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
    for key, text in ADDITIONAL_SERVICES.items():
        if key in selected_services:
            button_text = f"‚úÖ {text}"
        else:
            button_text = text
        builder.button(text=button_text, callback_data=f"add_service_{key}")

    # –í—ã—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ —É—Å–ª—É–≥ –≤ –æ–¥–∏–Ω —Å—Ç–æ–ª–±–µ—Ü
    builder.adjust(1)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –∏ "–ì–æ—Ç–æ–≤–æ" –≤ –æ–¥–∏–Ω —Ä—è–¥
    builder.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_bathrooms"),
        InlineKeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data="done_services")
    )

    return builder.as_markup()

def get_address_keyboard() -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —à–∞–≥–∞ –≤–≤–æ–¥–∞ –∞–¥—Ä–µ—Å–∞."""
    buttons = [
        [KeyboardButton(text="üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é", request_location=True)],
        [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –¥–æ–ø. —É—Å–ª—É–≥–∞–º")]
    ]
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)

def get_date_keyboard() -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã."""
    buttons = [
        [KeyboardButton(text="–°–µ–≥–æ–¥–Ω—è"), KeyboardButton(text="–ó–∞–≤—Ç—Ä–∞")],
        [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∞–¥—Ä–µ—Å—É")]
    ]
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)

def get_time_keyboard() -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏."""
    buttons = [
        [KeyboardButton(text="9:00 - 12:00"), KeyboardButton(text="12:00 - 15:00")],
        [KeyboardButton(text="15:00 - 18:00"), KeyboardButton(text="18:00 - 21:00")],
        [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –¥–∞—Ç—ã")]
    ]
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)

def get_photo_keyboard() -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —à–∞–≥–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ."""
    buttons = [
        [KeyboardButton(text="‚û°Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")],
        [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –≤—Ä–µ–º–µ–Ω–∏")]
    ]
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)

def get_order_name_keyboard() -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —à–∞–≥–∞ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏."""
    buttons = [
        [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —Ñ–æ—Ç–æ")]
    ]
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)

def get_order_phone_keyboard() -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —à–∞–≥–∞ –≤–≤–æ–¥–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞."""
    buttons = [
        [KeyboardButton(text="üì± –û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–æ–π –Ω–æ–º–µ—Ä", request_contact=True)],
        [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∏–º–µ–Ω–∏")]
    ]
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)

def get_confirmation_keyboard() -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞."""
    buttons = [
        [KeyboardButton(text="‚úÖ –í—Å–µ –≤–µ—Ä–Ω–æ, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å")],
        [KeyboardButton(text="‚¨ÖÔ∏è –û—Ç–º–µ–Ω–∏—Ç—å –∏ –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é")]
    ]
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)

def get_payment_keyboard() -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ø–æ—Å–æ–±–∞ –æ–ø–ª–∞—Ç—ã."""
    buttons = [
        [KeyboardButton(text="üí≥ –û–Ω–ª–∞–π–Ω-–æ–ø–ª–∞—Ç–∞")],
        [KeyboardButton(text="üíµ –ù–∞–ª–∏—á–Ω—ã–º–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é")]
    ]
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True, one_time_keyboard=True)

def get_address_confirmation_keyboard() -> ReplyKeyboardMarkup:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∞–¥—Ä–µ—Å–∞."""
    buttons = [
        [KeyboardButton(text="‚úÖ –î–∞, –≤—Å–µ –≤–µ—Ä–Ω–æ")],
        [KeyboardButton(text="‚úèÔ∏è –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é")]
    ]
    return ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)